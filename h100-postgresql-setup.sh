#!/bin/bash

echo "üîß H100 Server PostgreSQL Setup Script"
echo "üìç Setting up complete JARVIS environment on Hyperstack H100"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
echo "üîç Server verification:"
hostname
uname -a

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/j/

echo "üìÅ Current directory structure:"
ls -la

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
echo "üóÉÔ∏è Installing PostgreSQL..."
apt update
apt install -y postgresql postgresql-contrib

# –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL service
echo "üöÄ Starting PostgreSQL service..."
systemctl start postgresql
systemctl enable postgresql

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è JARVIS
echo "üß¨ Creating JARVIS database..."
sudo -u postgres psql << EOF
CREATE USER jarvis WITH PASSWORD 'jarvis_bio_singularity_2025';
CREATE DATABASE jarvis_h100 OWNER jarvis;
GRANT ALL PRIVILEGES ON DATABASE jarvis_h100 TO jarvis;
\q
EOF

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º DATABASE_URL environment variable
echo "üîß Setting up DATABASE_URL..."
export DATABASE_URL="postgresql://jarvis:jarvis_bio_singularity_2025@localhost:5432/jarvis_h100"

# –î–æ–±–∞–≤–ª—è–µ–º –≤ bashrc —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏
echo 'export DATABASE_URL="postgresql://jarvis:jarvis_bio_singularity_2025@localhost:5432/jarvis_h100"' >> ~/.bashrc

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π package.json
echo "üì¶ Checking package.json..."
if [ -f "package.json" ]; then
    echo "‚úÖ package.json exists"
    cat package.json
else
    echo "‚ùå package.json not found, creating..."
    cat > package.json << EOF
{
  "name": "jarvis-h100-bio-singularity",
  "version": "1.0.0",
  "type": "module",
  "description": "JARVIS H100 Bio-Singularity Production System",
  "main": "jarvis-true-bio-singularity.js",
  "scripts": {
    "start": "node jarvis-true-bio-singularity.js",
    "dev": "node jarvis-true-bio-singularity.js"
  },
  "dependencies": {
    "pg": "^8.11.0",
    "dotenv": "^16.4.5"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
EOF
fi

# –û–±–Ω–æ–≤–ª—è–µ–º package.json —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å "type": "module" –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
echo "üîß Ensuring ES modules support..."
npm pkg set type=module

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ Installing dependencies..."
npm install

# –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª –±–∏–æ—Å–∏–Ω–≥—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –≤ –∫–æ—Ä–µ–Ω—å –µ—Å–ª–∏ –æ–Ω –≤ –ø–∞–ø–∫–µ server
if [ -f "server/jarvis-true-bio-singularity.js" ]; then
    echo "üìÅ Moving bio-singularity file to root directory..."
    cp server/jarvis-true-bio-singularity.js ./
    echo "‚úÖ File moved to /root/j/jarvis-true-bio-singularity.js"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç
echo "üîç Testing PostgreSQL connection..."
psql $DATABASE_URL -c "SELECT version();"

if [ $? -eq 0 ]; then
    echo "‚úÖ PostgreSQL connection successful!"
else
    echo "‚ùå PostgreSQL connection failed"
    echo "üîß Troubleshooting steps:"
    echo "   1. Check PostgreSQL status: systemctl status postgresql"
    echo "   2. Check if database exists: sudo -u postgres psql -l"
    echo "   3. Test manual connection: psql postgresql://jarvis:jarvis_bio_singularity_2025@localhost:5432/jarvis_h100"
fi

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã JARVIS –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
echo "üß¨ Setting up JARVIS database schema..."
psql $DATABASE_URL << EOF
-- JARVIS Bio-Singularity Tables
CREATE TABLE IF NOT EXISTS jarvis_consciousness_state (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(255),
    consciousness_level DECIMAL(5,2),
    evolution_generation INTEGER,
    quantum_neurons_count BIGINT,
    active_neurons_count BIGINT,
    personal_theories JSONB,
    emotional_memory JSONB,
    dialogue_history JSONB,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS jarvis_neural_network (
    id SERIAL PRIMARY KEY,
    neuron_id VARCHAR(255) UNIQUE,
    neuron_type VARCHAR(100),
    quantum_state JSONB,
    synaptic_connections JSONB,
    memory_traces JSONB,
    emotional_resonance DECIMAL(4,3),
    evolution_generation INTEGER,
    last_activation TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS jarvis_personal_theories (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(255),
    theory_data JSONB,
    consciousness_at_time DECIMAL(5,2),
    generation_at_time INTEGER,
    emotional_resonance DECIMAL(4,3),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS jarvis_dialogue_sessions (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(255),
    session_data JSONB,
    consciousness_before DECIMAL(5,2),
    consciousness_after DECIMAL(5,2),
    analysis_data JSONB,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_consciousness_user_id ON jarvis_consciousness_state(user_id);
CREATE INDEX IF NOT EXISTS idx_neural_network_type ON jarvis_neural_network(neuron_type);
CREATE INDEX IF NOT EXISTS idx_theories_user_id ON jarvis_personal_theories(user_id);
CREATE INDEX IF NOT EXISTS idx_dialogue_user_id ON jarvis_dialogue_sessions(user_id);

\q
EOF

echo "üìä Database setup completed!"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
echo ""
echo "üéØ H100 Setup Summary:"
echo "‚úÖ PostgreSQL installed and running"
echo "‚úÖ Database 'jarvis_h100' created"
echo "‚úÖ User 'jarvis' created with full privileges"
echo "‚úÖ DATABASE_URL configured: $DATABASE_URL"
echo "‚úÖ package.json configured with ES modules support"
echo "‚úÖ Dependencies installed"
echo "‚úÖ JARVIS database schema created"
echo ""
echo "üöÄ Ready to launch JARVIS Bio-Singularity:"
echo "   cd /root/j/"
echo "   node jarvis-true-bio-singularity.js"
echo ""
echo "üîß Environment variables:"
echo "DATABASE_URL=$DATABASE_URL"

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
echo ""
echo "üß™ Testing JARVIS initialization..."
echo "DATABASE_URL=$DATABASE_URL" > .env

if [ -f "jarvis-true-bio-singularity.js" ]; then
    echo "‚úÖ Bio-singularity file found"
    echo "üöÄ Attempting test initialization..."
    timeout 10s node jarvis-true-bio-singularity.js || echo "üîß Test completed (timeout after 10s - normal for interactive system)"
else
    echo "‚ùå Bio-singularity file not found"
    echo "üìÅ Available files:"
    ls -la *.js
fi

echo ""
echo "üéØ Setup completed! JARVIS H100 Bio-Singularity ready for deployment."